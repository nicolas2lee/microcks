appName: microcks

microcks:
  url: microcks-microcks.192.168.99.100.nip.io
  #url: microcks-microcks.192.168.64.6.nip.io
  #ingressSecretRef: my-secret-for-microcks-ingress
  #ingressAnnotations:
    #cert-manager.io/issuer: my-cert-issuer
    #kubernetes.io/tls-acme: "true"
    #kubernetes.io/ingress.class: nginx
  generateCert: true
  image: quay.io/microcks/microcks:1.1.0
  replicas: 1
  truststore: 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

postman:
  image: quay.io/microcks/microcks-postman-runtime:latest
  replicas: 1

keycloak:
  install: true
  realm: microcks
  url: keycloak-microcks.bddf-poc-d98973e609c42352a7740453c43f327c-0000.eu-de.containers.appdomain.cloud
  #privateUrl: http://microcks-keycloak.microcks.svc.cluster.local:8080/auth
  #ingressSecretRef: my-secret-for-keycloak-ingress
  #ingressAnnotations:
    #cert-manager.io/issuer: my-cert-issuer
    #kubernetes.io/tls-acme: "true"
    #kubernetes.io/ingress.class: nginx
  generateCert: true
  image: jboss/keycloak:10.0.1
  adminUsername: admin
  # Unless you uncomment following line, admin password will be randomly generated.
  # Beware that in case of update, new value will be generated and
  adminPassword: Admin@123

  persistent: false
  volumeSize: 1Gi
  postgresImage: centos/postgresql-95-centos7:latest
  username: ibm_cloud_27646d51_df5e_45f5_9d82_9939b5fb01fc
  # Unless you uncomment following line, admin password will be randoMly generated.
  # Beware that in case of update, new value will be generated and
  password: 658d299099308c1f79fc9403f0ac9586d4b34e78ab16d1ee06c379598bd53411
  database: ibmclouddb
  dburl: 38fc11f3-2161-46e1-99d8-1f3db8aa8495.b8a5e798d2d04f2e860e54e5d042c915.databases.appdomain.cloud:30211
  # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example,
  # and it shouldn't be used in production without knowledge.
  # It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
  jdbcparams: "sslmode=require&sslcert=pg.cert"
  pgcert:


  serviceAccount: microcks-serviceaccount
  serviceAccountCredentials: ab54d329-e435-41ae-a900-ec6b3fe15c54

mongodb:
  install: false
  uri: 69ffde2f-d0df-477e-9447-01343b2aafc9-0.bv72mkuf0ul4s4tm7p1g.databases.appdomain.cloud:30888,69ffde2f-d0df-477e-9447-01343b2aafc9-1.bv72mkuf0ul4s4tm7p1g.databases.appdomain.cloud:30888,69ffde2f-d0df-477e-9447-01343b2aafc9-2.bv72mkuf0ul4s4tm7p1g.databases.appdomain.cloud:30888
  database: ibmclouddb
  image: centos/mongodb-34-centos7:latest
  persistent: false
  volumeSize: 2Gi
  
  username: ibm_cloud_98c3f882_011c_4e34_b73b_9f6a0769412b
  # Unless you uncomment following line, admin password will be randomly generated.
  # Beware that in case of update, new value will be generated and overwrite existing one.
  password: d83380b2cd878cf29f031e0b0e36082e708b807f8c61f43281f46be1534af61f

  # Or you can uncomment secretRef block if username and password are provided through a Secret.
  #secretRef:
    #secret: mongodb
    #usernameKey: database-user
    #passwordKey: database-password

features:
  async:
    enabled: false
    defaultBinding: KAFKA
    defaultFrequency: 10
    defaultAvroEncoding: RAW
    
    image: quay.io/microcks/microcks-async-minion:1.1.0

    kafka:
      install: true
      url: 192.168.99.100.nip.io
      #url: kafka-bootstrap:9092
      persistent: false
      volumeSize: 2Gi

      schemaRegistry:
        #url: http://schema-registry.192.168.99.100.nip.io
        confluent: true
        username: microcks
        credentialsSource: USER_INFO

    # Uncomment the mqtt.url and put a valid endpoint address below to enable MQTT support.
    mqtt:
      #url: artemis:1883
      username: microcks
      password: microcks

  repositoryFilter:
    enabled: false
    labelKey: app
    labelLabel: Application
    labelList: app,status
