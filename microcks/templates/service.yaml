kind: Service
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}"
  labels:
    app: "{{ .Values.appName }}"
    container: spring
    group: microcks
spec:
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
    name: spring
  type: ClusterIP
  sessionAffinity: None
  selector:
    app: "{{ .Values.appName }}"
    container: spring
    group: microcks
---
kind: Service
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-postman-runtime"
  labels:
    app: "{{ .Values.appName }}"
    container: postman-runtime
    group: microcks
spec:
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 3000
    name: postman-runtime
  type: ClusterIP
  sessionAffinity: None
  selector:
    app: "{{ .Values.appName }}"
    container: postman-runtime
    group: microcks
{{- if and .Values.mongodb.install }}
---
kind: Service
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-mongodb"
  labels:
    app: "{{ .Values.appName }}"
    container: mongodb
    group: microcks
spec:
  ports:
  - name: mongodb
    protocol: TCP
    port: 27017
    targetPort: 27017
    nodePort: 0
  selector:
    app: "{{ .Values.appName }}"
    container: mongodb
    group: microcks
  type: ClusterIP
  sessionAffinity: None
{{- end }}
{{- if and .Values.keycloak.install }}
---
kind: Service
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-keycloak"
  labels:
    app: "{{ .Values.appName }}"
    container: keycloak
    group: microcks
spec:
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
    name: keycloak
  type: ClusterIP
  sessionAffinity: None
  selector:
    app: "{{ .Values.appName }}"
    container: keycloak
    group: microcks
---
kind: Service
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-keycloak-postgresql"
  labels:
    app: "{{ .Values.appName }}"
    container: keycloak-postgresql
    group: microcks
spec:
  ports:
  - name: postgresql
    protocol: TCP
    port: 5432
    targetPort: 5432
    nodePort: 0
  type: ClusterIP
  sessionAffinity: None
  selector:
    app: "{{ .Values.appName }}"
    container: keycloak-postgresql
    group: microcks
{{- end }}
{{- if and .Values.features.async.enabled }}
---
kind: Service
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-async-minion"
  labels:
    app: "{{ .Values.appName }}"
    container: async-minion
    group: microcks
spec:
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      name: async-minion
  type: ClusterIP
  sessionAffinity: None
  selector:
    app: "{{ .Values.appName }}"
    container: async-minion
    group: microcks
{{- end }}