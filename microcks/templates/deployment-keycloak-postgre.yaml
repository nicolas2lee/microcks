{{- if and .Values.keycloak.install }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.appName }}-keycloak"
  labels:
    app: "{{ .Values.appName }}"
    container: keycloak
    group: microcks
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.appName }}"
      deploymentconfig: keycloak
      container: keycloak
      group: microcks
  template:
    metadata:
      labels:
        app: "{{ .Values.appName }}"
        deploymentconfig: keycloak
        container: keycloak
        group: microcks
    spec:
      containers:
      - name: keycloak-server
        image: {{ .Values.keycloak.image }}
        resources:
          requests:
            cpu: 400m
            memory: 400Mi
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: jolokia
          containerPort: 8778
          protocol: TCP
        args:
        - "-b $(INTERNAL_POD_IP)"
        - "-Djgroups.bind_addr=global"
        - "-Djboss.node.name=$(INTERNAL_POD_IP)"
        - "-Dkeycloak.import=/opt/jboss/keycloak/standalone/configuration/realm/microcks-realm.json"
        env:
        - name: INTERNAL_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KEYCLOAK_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: "{{ .Values.appName }}-keycloak-admin"
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: "{{ .Values.appName }}-keycloak-admin"
        - name: OPERATING_MODE
          value: clustered
        - name: DB_VENDOR
          value: POSTGRES
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: postgresUsername
              name: "{{ .Values.appName }}-keycloak-admin"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresPassword
              name: "{{ .Values.appName }}-keycloak-admin"
        - name: DB_DATABASE
          valueFrom:
            secretKeyRef:
              key: postgresDatabase
              name: "{{ .Values.appName }}-keycloak-admin"
        - name: DB_ADDR
          valueFrom:
            secretKeyRef:
              key: postgresUrl
              name: "{{ .Values.appName }}-keycloak-admin"
        - name: PROXY_ADDRESS_FORWARDING
          value: 'true'
        {{- if hasKey .Values.keycloak "privateUrl" }}
        - name: KEYCLOAK_FRONTEND_URL
          value: https://{{ .Values.keycloak.url }}/auth
        {{- end }}
        volumeMounts:
        - name: {{ .Values.appName }}-keycloak-config
          mountPath: "/opt/jboss/keycloak/standalone/configuration/realm"
        - name: {{ .Values.appName }}-keycloak-postgre-ca
          mountPath: "/security/pgsql"
        securityContext:
          privileged: false
      volumes:
      - name: "{{ .Values.appName }}-keycloak-config"
        configMap:
          name: "{{ .Values.appName }}-keycloak-config"
      - name: "{{ .Values.appName }}-keycloak-postgre-ca"
        secret:
          secretName: "{{ .Values.appName }}-keycloak-postgre-ca"
      restartPolicy: Always
      dnsPolicy: ClusterFirst
{{- end }}